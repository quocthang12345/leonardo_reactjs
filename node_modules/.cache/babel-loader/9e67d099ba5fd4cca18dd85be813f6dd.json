{"ast":null,"code":"import axios from \"axios\";\nconst ListItem = {\n  card: [],\n  bag: []\n};\nexport const GetItem = category => {\n  const newCategory = category.toLowerCase();\n  return dispatch => {\n    axios.get(`/${newCategory}`).then(res => {\n      if (newCategory == \"card\") {\n        dispatch({\n          type: 'GET-CARD',\n          payload: res.data\n        });\n      } else if (newCategory == \"bag\") {\n        dispatch({\n          type: 'GET-BAG',\n          payload: res.data\n        });\n      }\n    }).catch(err => {\n      dispatch({\n        type: 'FAILED',\n        payload: err\n      });\n    });\n  };\n};\n_c = GetItem;\n\nconst reducer = (state = ListItem, action) => {\n  switch (action.type) {\n    case 'GET-CARD':\n      return { ...state,\n        card: action.payload\n      };\n\n    case 'GET-BAG':\n      return { ...state,\n        bag: action.payload\n      };\n\n    case 'FAILED':\n      console.log(action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetItem\");","map":{"version":3,"sources":["/home/quocthang123/Desktop/Leonardo/leonardo-app/src/redux/items/ItemReducer.js"],"names":["axios","ListItem","card","bag","GetItem","category","newCategory","toLowerCase","dispatch","get","then","res","type","payload","data","catch","err","reducer","state","action","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAG;AACTC,EAAAA,IAAI,EAAC,EADI;AAETC,EAAAA,GAAG,EAAC;AAFK,CAAjB;AAMA,OAAO,MAAMC,OAAO,GAAIC,QAAD,IAAc;AACjC,QAAMC,WAAW,GAAGD,QAAQ,CAACE,WAAT,EAApB;AACA,SAAOC,QAAQ,IAAI;AACfR,IAAAA,KAAK,CAACS,GAAN,CAAW,IAAGH,WAAY,EAA1B,EACCI,IADD,CACOC,GAAD,IAAS;AACX,UAAGL,WAAW,IAAI,MAAlB,EAAyB;AACrBE,QAAAA,QAAQ,CAAC;AAACI,UAAAA,IAAI,EAAG,UAAR;AAAoBC,UAAAA,OAAO,EAAGF,GAAG,CAACG;AAAlC,SAAD,CAAR;AACH,OAFD,MAEM,IAAGR,WAAW,IAAI,KAAlB,EAAwB;AAC1BE,QAAAA,QAAQ,CAAC;AAACI,UAAAA,IAAI,EAAG,SAAR;AAAmBC,UAAAA,OAAO,EAAGF,GAAG,CAACG;AAAjC,SAAD,CAAR;AACH;AACJ,KAPD,EAQCC,KARD,CAQQC,GAAD,IAAS;AACZR,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAG,QAAR;AAAkBC,QAAAA,OAAO,EAAGG;AAA5B,OAAD,CAAR;AACH,KAVD;AAYH,GAbD;AAcH,CAhBM;KAAMZ,O;;AAmBb,MAAMa,OAAO,GAAG,CAACC,KAAK,GAAGjB,QAAT,EAAoBkB,MAApB,KAA+B;AAC3C,UAAOA,MAAM,CAACP,IAAd;AACI,SAAK,UAAL;AACQ,aAAM,EACF,GAAGM,KADD;AAEFhB,QAAAA,IAAI,EAAEiB,MAAM,CAACN;AAFX,OAAN;;AAIR,SAAK,SAAL;AACQ,aAAM,EACF,GAAGK,KADD;AAEFf,QAAAA,GAAG,EAAEgB,MAAM,CAACN;AAFV,OAAN;;AAIR,SAAK,QAAL;AACIO,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACN,OAAnB;;AACJ;AACI,aAAOK,KAAP;AAdR;AAgBH,CAjBD;;AAmBA,eAAeD,OAAf","sourcesContent":["import axios from \"axios\";\n\nconst ListItem = {\n        card:[],\n        bag:[]\n}\n\n\nexport const GetItem = (category) => {\n    const newCategory = category.toLowerCase();\n    return dispatch => {\n        axios.get(`/${newCategory}`)\n        .then((res) => {\n            if(newCategory == \"card\"){\n                dispatch({type : 'GET-CARD', payload : res.data});\n            }else if(newCategory == \"bag\"){\n                dispatch({type : 'GET-BAG', payload : res.data});\n            }\n        })\n        .catch((err) => {\n            dispatch({type : 'FAILED', payload : err});\n        });\n    \n    }\n}\n\n\nconst reducer = (state = ListItem , action) => {\n    switch(action.type){\n        case 'GET-CARD':\n                return{\n                    ...state,\n                    card: action.payload\n                }\n        case 'GET-BAG':\n                return{\n                    ...state,\n                    bag: action.payload\n                }\n        case 'FAILED':\n            console.log(action.payload)\n        default:\n            return state;\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}